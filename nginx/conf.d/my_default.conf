server {
    listen 80 default_server;
    server_name _;

    set $HTTP_ORIGIN_REGEX "^https?://(.+\.local|webtest\.local):?\d*";
    set $HTTP_ORIGIN_BYPASS_REGEX "^(/bypass|/bypass2)";

    set $cors_origin "";
    if ($http_origin ~* $HTTP_ORIGIN_REGEX) {
        set $cors_origin $http_origin;
    }

    location / {

        if ($cors_origin != "") {
            add_header Access-Control-Allow-Origin $cors_origin;
        }

        # Always set Access-Control-Allow-Origin if the request is going to our /bypass endpoint
        set $and 1;
        if ($cors_origin != "") {
            set $and 0;
        }
        if ($request_uri !~* $HTTP_ORIGIN_BYPASS_REGEX) {
            set $and 0;
        }
        if ($and) {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Bypass-Occurred "true";
        }

        if ($request_uri ~* $HTTP_ORIGIN_BYPASS_REGEX) {
            add_header Bypass-Should-Have-Occurred "true";
        }

        # Test headers
        add_header Echo-Http-Referer $http_referer always;
        add_header Echo-Http-Origin $http_origin always;
        add_header Echo-Http-Referer-Hostname $http_referer_hostname always;
        add_header Echo-Http-Host $http_host always;
        add_header Echo-Request-Uri $request_uri always;
        add_header Echo-Http-Origin-Regex $HTTP_ORIGIN_REGEX always;
        add_header Echo-Bypass $HTTP_ORIGIN_BYPASS_REGEX always;
        add_header Echo-Cors-Origin $cors_origin always;

        # add_header Access-Control-Allow-Origin $http_origin always;

        add_header Echo-Hello-World 'hello world' always;

        add_header Content-Type text/plain;
        return 200 'hello world from nginx';
    }
}
